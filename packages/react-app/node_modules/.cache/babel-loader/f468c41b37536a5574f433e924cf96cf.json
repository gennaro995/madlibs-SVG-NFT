{"ast":null,"code":"var _jsxFileName = \"/Users/gennarogiordano/Desktop/dev.nosync/my-github/madlibs-SVG-NFT/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Account, Address, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, NetworkDisplay, FaucetHint, Popup } from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\"; // contracts\n\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { YourLoogies, Loogies } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // üõ∞ providers\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\nconst web3Modal = Web3ModalSetup(); // üõ∞ providers\n\nconst providers = [\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\", `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, \"https://rpc.scaffoldeth.io:48544\"];\n\nfunction App(props) {\n  _s();\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const location = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputText, setInputText] = useState(''); // '' is the initial state value\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }; // load all your providers\n\n\n  const localProvider = useStaticJsonRPC([process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // const contractConfig = useContractConfig();\n\n  const contractConfig = {\n    deployedContracts: deployedContracts || {},\n    externalContracts: externalContracts || {}\n  }; // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n  const priceToMint = useContractReader(readContracts, \"YourCollectible\", \"price\");\n  if (DEBUG) console.log(\"ü§ó priceToMint:\", priceToMint);\n  const totalSupply = useContractReader(readContracts, \"YourCollectible\", \"totalSupply\");\n  if (DEBUG) console.log(\"ü§ó totalSupply:\", totalSupply);\n  const loogiesLeft = 1000000000000000; // keep track of a variable from the contract in the local React state:\n\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  if (DEBUG) console.log(\"ü§ó address: \", address, \" balance:\", balance); //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      //setLoadingLoogies(true);\n      const collectibleUpdate = [];\n      let startIndex = totalSupply - 1 - perPage * (page - 1);\n\n      for (let tokenIndex = 0; tokenIndex < 1; tokenIndex++) {\n        //for (let tokenIndex = startIndex; tokenIndex > startIndex - perPage && tokenIndex >= 0; tokenIndex--) {\n        try {\n          if (DEBUG) console.log(\"Getting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenByIndex(tokenIndex);\n          if (DEBUG) console.log(\"Getting Loogie tokenId: \", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          if (DEBUG) console.log(\"tokenURI: \", tokenURI);\n          const jsonManifestString = atob(tokenURI.substring(29));\n          const proposals = await readContracts.YourCollectible.getProposals(tokenId);\n          if (DEBUG) console.log(\"proposals: \", proposals);\n          const text = await readContracts.YourCollectible._madlibs(tokenId);\n          if (DEBUG) console.log(\"text: \", text[1]);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestString);\n            collectibleUpdate.push({\n              id: tokenId,\n              uri: tokenURI,\n              owner: address,\n              proposals: proposals,\n              text: text[1],\n              ...jsonManifest\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      setYourCollectibles(collectibleUpdate.reverse());\n    };\n\n    updateYourCollectibles();\n  }, [address, yourBalance]); //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetworkDisplay, {\n      NETWORKCHECK: NETWORKCHECK,\n      localChainId: localChainId,\n      selectedChainId: selectedChainId,\n      targetNetwork: targetNetwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      style: {\n        textAlign: \"center\"\n      },\n      selectedKeys: [location.pathname],\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, \"/\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/yourLoogies\",\n          children: \"MadLibs Game onChain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, \"/yourLoogies\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/howto\",\n          children: \"How To Use MadLibs Game onChain Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, \"/howto\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/debug\",\n          children: \"Debug Contracts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, \"/debug\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 820,\n        margin: \"auto\",\n        marginTop: 32,\n        paddingBottom: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All Ether from sales goes to public goods!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: togglePopup //   async () => {\n        //   const priceRightNow = await readContracts.YourCollectible.price();\n        //   try {\n        //     const txCur = await tx(writeContracts.YourCollectible.mintItem({ value: priceRightNow, gasLimit: 300000 }));\n        //     await txCur.wait();\n        //   } catch (e) {\n        //     console.log(\"mint failed\", e);\n        //   }\n        // }}\n        ,\n        children: [\"MINT for \\u039E\", priceToMint && (+ethers.utils.formatEther(priceToMint)).toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Insert your text!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Use # to indicate the Mad Lib!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 13\n              }, this), \"Example: Hello #, how are you?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Text: \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                style: {\n                  resize: 'none'\n                },\n                rows: \"4\",\n                cols: \"50\",\n                value: inputText,\n                onInput: e => setInputText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: async () => {\n                const priceRightNow = await readContracts.YourCollectible.price();\n                const nBlanks = (inputText.match(/#/g) || []).length;\n                console.log(\"text: \", inputText);\n                console.log(\"nBlanks: \", nBlanks);\n                let txCur = await tx(writeContracts.YourCollectible.mintItem(inputText, nBlanks, {\n                  value: priceRightNow,\n                  gasLimit: 300000\n                }));\n              },\n              children: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 13\n            }, this), \"            \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true),\n        handleClose: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: [loogiesLeft, \" left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Loogies, {\n          readContracts: readContracts,\n          writeContracts: writeContracts,\n          tx: tx,\n          mainnetProvider: mainnetProvider,\n          blockExplorer: blockExplorer,\n          totalSupply: totalSupply,\n          DEBUG: DEBUG\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/yourLoogies\",\n        children: /*#__PURE__*/_jsxDEV(YourLoogies, {\n          readContracts: readContracts,\n          writeContracts: writeContracts,\n          priceToMint: priceToMint,\n          yourCollectibles: yourCollectibles,\n          tx: tx,\n          mainnetProvider: mainnetProvider,\n          blockExplorer: blockExplorer,\n          transferToAddresses: transferToAddresses,\n          setTransferToAddresses: setTransferToAddresses,\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/howto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 18,\n            width: 820,\n            margin: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: \"2em\",\n              fontWeight: \"bold\"\n            },\n            children: \"How to add Heterochromic  Ethereum network on MetaMask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\",\n              marginLeft: 50,\n              marginBottom: 50\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Go to \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  target: \"_blank\",\n                  href: \"https://chainid.link/?network=optimism\",\n                  children: \"https://chainid.link/?network=optimism\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Click on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"connect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 28\n                }, this), \" to add the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Heterochromic  Ethereum\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 64\n                }, this), \" network in \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"MetaMask\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 116\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: \"2em\",\n              fontWeight: \"bold\"\n            },\n            children: \"How to add funds to your wallet on Heterochromic  Ethereum network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"left\",\n              marginLeft: 50,\n              marginBottom: 100\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://portr.xyz/\",\n                  target: \"_blank\",\n                  children: \"The Teleporter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), \": the cheaper option, but with a 0.05 ether limit per transfer.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://gateway.optimism.io/\",\n                  target: \"_blank\",\n                  children: \"The Optimism Gateway\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), \": larger transfers and cost more.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://app.hop.exchange/send?token=ETH&sourceNetwork=ethereum&destNetwork=optimism\",\n                  target: \"_blank\",\n                  children: \"Hop.Exchange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this), \": where you can send from/to Ethereum mainnet and other L2 networks.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/debug\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Address, {\n            value: readContracts && readContracts.YourCollectible && readContracts.YourCollectible.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contract, {\n          name: \"YourCollectible\",\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 820,\n        margin: \"auto\",\n        marginTop: 32\n      },\n      children: [\"\\uD83D\\uDEE0 built with \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/scaffold-eth/scaffold-eth\",\n        target: \"_blank\",\n        children: \"\\uD83C\\uDFD7 scaffold-eth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 23\n      }, this), \"\\uD83C\\uDF74 \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/scaffold-eth/scaffold-eth\",\n        target: \"_blank\",\n        children: \"Fork this repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 12\n      }, this), \" and build a cool SVG NFT!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaucetHint, {\n        localProvider: localProvider,\n        targetNetwork: targetNetwork,\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Cz7CsPyjRn1P3bhPaIvkbHW0kns=\", false, function () {\n  return [useLocation, useStaticJsonRPC, useStaticJsonRPC, useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader, useContractReader];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gennarogiordano/Desktop/dev.nosync/my-github/madlibs-SVG-NFT/packages/react-app/src/App.jsx"],"names":["Alert","Button","Col","Menu","Row","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","React","useCallback","useEffect","useState","Link","Route","Switch","useLocation","Account","Address","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","NetworkDisplay","FaucetHint","Popup","NETWORKS","ALCHEMY_KEY","externalContracts","deployedContracts","Transactor","Web3ModalSetup","YourLoogies","Loogies","useStaticJsonRPC","ethers","require","targetNetwork","localhost","DEBUG","NETWORKCHECK","console","log","blockExplorer","web3Modal","providers","App","props","injectedProvider","setInjectedProvider","address","setAddress","location","isOpen","setIsOpen","inputText","setInputText","togglePopup","localProvider","process","env","REACT_APP_PROVIDER","rpcUrl","mainnetProvider","logoutOfWeb3Modal","clearCachedProvider","provider","disconnect","setTimeout","window","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","_network","chainId","selectedChainId","tx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","priceToMint","totalSupply","loogiesLeft","balance","yourBalance","toNumber","yourCollectibles","setYourCollectibles","transferToAddresses","setTransferToAddresses","updateYourCollectibles","collectibleUpdate","startIndex","perPage","page","tokenIndex","tokenId","YourCollectible","tokenByIndex","tokenURI","jsonManifestString","atob","substring","proposals","getProposals","text","_madlibs","jsonManifest","JSON","parse","push","id","uri","owner","e","reverse","utils","formatEther","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","faucetAvailable","connection","name","indexOf","textAlign","pathname","maxWidth","margin","marginTop","paddingBottom","fontSize","toFixed","resize","target","value","priceRightNow","nBlanks","match","length","txCur","mintItem","gasLimit","fontWeight","width","marginLeft","marginBottom","padding","position","right","top","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Address,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  Popup\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { YourLoogies, Loogies } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\nconst web3Modal = Web3ModalSetup();\n\n// üõ∞ providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const location = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputText, setInputText] = useState(''); // '' is the initial state value\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  const priceToMint = useContractReader(readContracts, \"YourCollectible\", \"price\");\n  if (DEBUG) console.log(\"ü§ó priceToMint:\", priceToMint);\n\n  const totalSupply = useContractReader(readContracts, \"YourCollectible\", \"totalSupply\");\n  if (DEBUG) console.log(\"ü§ó totalSupply:\", totalSupply);\n  const loogiesLeft = 1000000000000000;\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  if (DEBUG) console.log(\"ü§ó address: \", address, \" balance:\", balance);\n\n  //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      //setLoadingLoogies(true);\n      const collectibleUpdate = [];\n      let startIndex = totalSupply - 1 - perPage * (page - 1);\n      for (let tokenIndex = 0; tokenIndex < 1; tokenIndex++) {\n      //for (let tokenIndex = startIndex; tokenIndex > startIndex - perPage && tokenIndex >= 0; tokenIndex--) {\n        try {\n          if (DEBUG) console.log(\"Getting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenByIndex(tokenIndex);\n          if (DEBUG) console.log(\"Getting Loogie tokenId: \", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          if (DEBUG) console.log(\"tokenURI: \", tokenURI);\n          const jsonManifestString = atob(tokenURI.substring(29));\n\n          const proposals = await readContracts.YourCollectible.getProposals(tokenId);\n          if (DEBUG) console.log(\"proposals: \", proposals);\n\n          const text = await readContracts.YourCollectible._madlibs(tokenId);\n\n          if (DEBUG) console.log(\"text: \", text[1]);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestString);\n            collectibleUpdate.push({ id: tokenId, uri: tokenURI, owner: address,proposals: proposals, text: text[1], ...jsonManifest });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      setYourCollectibles(collectibleUpdate.reverse());\n    };\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      <NetworkDisplay\n        NETWORKCHECK={NETWORKCHECK}\n        localChainId={localChainId}\n        selectedChainId={selectedChainId}\n        targetNetwork={targetNetwork}\n      />\n      <Menu style={{ textAlign: \"center\" }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/yourLoogies\">\n          <Link to=\"/yourLoogies\">MadLibs Game onChain</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/howto\">\n          <Link to=\"/howto\">How To Use MadLibs Game onChain Network</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/debug\">\n          <Link to=\"/debug\">Debug Contracts</Link>\n        </Menu.Item>\n      </Menu>\n\n      <div style={{ maxWidth: 820, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n        <div style={{ fontSize: 16 }}>\n          <p>All Ether from sales goes to public goods!!</p>\n        </div>\n\n        <Button\n          type=\"primary\"\n          onClick={\n            togglePopup}\n          //   async () => {\n          //   const priceRightNow = await readContracts.YourCollectible.price();\n          //   try {\n          //     const txCur = await tx(writeContracts.YourCollectible.mintItem({ value: priceRightNow, gasLimit: 300000 }));\n          //     await txCur.wait();\n          //   } catch (e) {\n          //     console.log(\"mint failed\", e);\n          //   }\n          // }}\n        >\n          MINT for Œû{priceToMint && (+ethers.utils.formatEther(priceToMint)).toFixed(4)}\n        </Button>\n        {isOpen && <Popup\n         content={<>\n          <form>\n            <h3>Insert your text!</h3>\n            <h4>Use # to indicate the Mad Lib! \n            <br />\n             Example: Hello #, how are you?</h4> \n            <br />\n            <label>\n              Text: <span></span>\n              <textarea style={{resize: 'none'}} rows=\"4\" cols=\"50\" value={inputText} onInput={e => setInputText(e.target.value)} />\n              <br />\n              \n            </label>\n            <br />\n            <Button\n                type=\"primary\"\n                onClick={\n                async () => {\n                const priceRightNow = await readContracts.YourCollectible.price();\n                const nBlanks =  (inputText.match(/#/g)||[]).length;\n                console.log(\"text: \", inputText);\n                console.log(\"nBlanks: \", nBlanks);\n                let txCur = await tx(writeContracts.YourCollectible.mintItem(inputText, nBlanks,{value: priceRightNow, gasLimit: 300000 }));\n              }}\n           >Mint\n          </Button>            <br />\n          </form>\n          <br />\n\n        </>}\n          handleClose={togglePopup}\n        />}\n        <p style={{ fontWeight: \"bold\" }}>\n          { loogiesLeft } left\n        </p>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Loogies\n            readContracts={readContracts}\n            writeContracts={writeContracts}\n            tx={tx}\n            mainnetProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            totalSupply={totalSupply}\n            DEBUG={DEBUG}\n          />\n        </Route>\n        <Route exact path=\"/yourLoogies\">\n          <YourLoogies\n            readContracts={readContracts}\n            writeContracts={writeContracts}\n            priceToMint={priceToMint}\n            yourCollectibles={yourCollectibles}\n            tx={tx}\n            mainnetProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            transferToAddresses={transferToAddresses}\n            setTransferToAddresses={setTransferToAddresses}\n            address={address}\n          />\n        </Route>\n        <Route exact path=\"/howto\">\n          <div style={{ fontSize: 18, width: 820, margin: \"auto\" }}>\n            <h2 style={{ fontSize: \"2em\", fontWeight: \"bold\" }}>How to add Heterochromic  Ethereum network on MetaMask</h2>\n            <div style={{ textAlign: \"left\", marginLeft: 50, marginBottom: 50 }}>\n              <ul>\n                <li>\n                  Go to <a target=\"_blank\" href=\"https://chainid.link/?network=optimism\">https://chainid.link/?network=optimism</a>\n                </li>\n                <li>\n                  Click on <strong>connect</strong> to add the <strong>Heterochromic  Ethereum</strong> network in <strong>MetaMask</strong>.\n                </li>\n              </ul>\n            </div>\n            <h2 style={{ fontSize: \"2em\", fontWeight: \"bold\" }}>How to add funds to your wallet on Heterochromic  Ethereum network</h2>\n            <div style={{ textAlign: \"left\", marginLeft: 50, marginBottom: 100 }}>\n              <ul>\n                <li><a href=\"https://portr.xyz/\" target=\"_blank\">The Teleporter</a>: the cheaper option, but with a 0.05 ether limit per transfer.</li>\n                <li><a href=\"https://gateway.optimism.io/\" target=\"_blank\">The Optimism Gateway</a>: larger transfers and cost more.</li>\n                <li><a href=\"https://app.hop.exchange/send?token=ETH&sourceNetwork=ethereum&destNetwork=optimism\" target=\"_blank\">Hop.Exchange</a>: where you can send from/to Ethereum mainnet and other L2 networks.</li>\n              </ul>\n            </div>\n          </div>\n        </Route>\n        <Route exact path=\"/debug\">\n          <div style={{ padding: 32 }}>\n            <Address value={readContracts && readContracts.YourCollectible && readContracts.YourCollectible.address} />\n          </div>\n          <Contract\n            name=\"YourCollectible\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n        </Route>\n      </Switch>\n\n      <div style={{ maxWidth: 820, margin: \"auto\", marginTop: 32 }}>\n        üõ† built with <a href=\"https://github.com/scaffold-eth/scaffold-eth\" target=\"_blank\">üèó scaffold-eth</a>\n        üç¥ <a href=\"https://github.com/scaffold-eth/scaffold-eth\" target=\"_blank\">Fork this repo</a> and build a cool SVG NFT!\n      </div>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}