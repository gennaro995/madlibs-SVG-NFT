{"ast":null,"code":"var _jsxFileName = \"/Users/gennarogiordano/Desktop/dev.nosync/my-github/madlibs-SVG-NFT/packages/react-app/src/views/Loogies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, List, Spin } from \"antd\";\nimport { Address } from \"../components\";\nimport { ethers } from \"ethers\";\nimport { Popup } from \"../components\";\nimport { Transactor, Web3ModalSetup } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Loogies({\n  readContracts,\n  writeContracts,\n  tx,\n  mainnetProvider,\n  blockExplorer,\n  totalSupply,\n  DEBUG\n}) {\n  _s();\n\n  const [allLoogies, setAllLoogies] = useState();\n  const [page, setPage] = useState(1);\n  const [loadingLoogies, setLoadingLoogies] = useState(true);\n  const perPage = 8;\n  const [open, setOpen] = useState(false);\n  const [inputText, setInputText] = useState([]); // '' is the initial state value\n\n  const toggleProposal = () => {\n    setOpen(!open);\n  };\n\n  const handleFormChange = (event, index) => {\n    let data = [...inputText];\n    data[index][event.target.name] = event.target.value;\n    setInputText(data);\n  };\n\n  const addFields = () => {\n    let object = {\n      text: ''\n    };\n    setInputText([...inputText, object]);\n  };\n\n  const add = nBlanks => {\n    console.log(\"numero di text:\", nBlanks);\n\n    for (let i = 0; i < nBlanks; i++) {\n      //Create an input type dynamically.\n      var element = document.createElement(\"textarea\"); //Create Labels\n\n      var label = document.createElement(\"Label\");\n      label.innerHTML = \"New Label\"; //Assign different attributes to the element.\n\n      element.setAttribute(\"value\", \"\");\n      element.setAttribute(\"name\", \"Test Name\");\n      element.setAttribute(\"style\", \"width:200px\");\n      label.setAttribute(\"style\", \"font-weight:normal\"); // 'foobar' is the div id, where new fields are to be added\n\n      var foo = document.getElementById(\"proposals\"); //Append the element in page (in span).\n\n      foo.appendChild(label);\n      foo.appendChild(element);\n    }\n  };\n\n  useEffect(() => {\n    const updateAllLoogies = async () => {\n      if (readContracts.YourCollectible && totalSupply) {\n        setLoadingLoogies(true);\n        const collectibleUpdate = [];\n        let startIndex = totalSupply - 1 - perPage * (page - 1);\n\n        for (let tokenIndex = startIndex; tokenIndex > startIndex - perPage && tokenIndex >= 0; tokenIndex--) {\n          try {\n            if (DEBUG) console.log(\"Getting token index\", tokenIndex);\n            const tokenId = await readContracts.YourCollectible.tokenByIndex(tokenIndex);\n            if (DEBUG) console.log(\"Getting Loogie tokenId: \", tokenId);\n            const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n            if (DEBUG) console.log(\"tokenURI: \", tokenURI);\n            const jsonManifestString = atob(tokenURI.substring(29));\n            const madLib = await readContracts.YourCollectible._madlibs(tokenId);\n            const nBlanks = madLib[2];\n            if (DEBUG) console.log(\"Getting nblanks: \", nBlanks);\n\n            try {\n              const jsonManifest = JSON.parse(jsonManifestString);\n              collectibleUpdate.push({\n                id: tokenId,\n                uri: tokenURI,\n                nBlanks: nBlanks,\n                ...jsonManifest\n              });\n            } catch (e) {\n              console.log(e);\n            }\n          } catch (e) {\n            console.log(e);\n          }\n        }\n\n        setAllLoogies(collectibleUpdate);\n        setLoadingLoogies(false);\n      }\n    };\n\n    updateAllLoogies();\n  }, [readContracts.YourCollectible, (totalSupply || \"0\").toString(), page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"auto\",\n      margin: \"auto\",\n      paddingBottom: 25,\n      minHeight: 800\n    },\n    children: false ? /*#__PURE__*/_jsxDEV(Spin, {\n      style: {\n        marginTop: 100\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        grid: {\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 2,\n          lg: 3,\n          xl: 4,\n          xxl: 4\n        },\n        pagination: {\n          total: totalSupply,\n          defaultPageSize: perPage,\n          defaultCurrent: page,\n          onChange: currentPage => {\n            setPage(currentPage);\n          },\n          showTotal: (total, range) => `${range[0]}-${range[1]} of ${totalSupply} items`\n        },\n        loading: loadingLoogies,\n        dataSource: allLoogies,\n        renderItem: item => {\n          const id = item.id.toNumber();\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: 18,\n                    marginRight: 8\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: \"Loogie #\" + id,\n                width: \"200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Address, {\n                  address: item.owner,\n                  ensProvider: mainnetProvider,\n                  blockExplorer: blockExplorer,\n                  fontSize: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    type: \"primary\",\n                    onClick: toggleProposal,\n                    children: \"INSERT PROPOSAL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this), open && /*#__PURE__*/_jsxDEV(Popup, {\n                    content: /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                        id: \"proposals\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Insert your Proposals!\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                          children: \"Use comma to separate words \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 34\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [\"Text: \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 158,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            style: {\n                              resize: 'none'\n                            },\n                            style: \"background-color:pink\",\n                            rows: \"4\",\n                            cols: \"50\",\n                            value: inputText,\n                            onInput: e => {\n                              var proposals = e.target.value.split(/(?:,| )+/);\n                              setInputText(proposals);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 163,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 157,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"primary\",\n                          onClick: async () => {\n                            console.log(\"text: \", inputText);\n                            console.log(\"nBlanks: \", item.nBlanks);\n                            let txCur = await tx(writeContracts.YourCollectible.addProposal(inputText));\n                          },\n                          children: \"Insert Proposal\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 33\n                        }, this), \"            \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 52\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true),\n                    handleClose: toggleProposal\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"primary\",\n                    onClick: async () => {\n                      console.log(\"text: \", inputText);\n                      console.log(\"nBlanks: \", item.nBlanks); //if(!item.closed){\n\n                      let txClose = await tx(writeContracts.YourCollectible.closeMadLib(id)); //}\n                    },\n                    children: \"CLOSE PROPOSAL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, id + \"_\" + item.uri + \"_\" + item.owner, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loogies, \"i0XBqf5l7fgshcFvXuWtB/48BRI=\");\n\n_c = Loogies;\nexport default Loogies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loogies\");","map":{"version":3,"sources":["/Users/gennarogiordano/Desktop/dev.nosync/my-github/madlibs-SVG-NFT/packages/react-app/src/views/Loogies.jsx"],"names":["React","useCallback","useEffect","useState","Link","Button","Card","List","Spin","Address","ethers","Popup","Transactor","Web3ModalSetup","Loogies","readContracts","writeContracts","tx","mainnetProvider","blockExplorer","totalSupply","DEBUG","allLoogies","setAllLoogies","page","setPage","loadingLoogies","setLoadingLoogies","perPage","open","setOpen","inputText","setInputText","toggleProposal","handleFormChange","event","index","data","target","name","value","addFields","object","text","add","nBlanks","console","log","i","element","document","createElement","label","innerHTML","setAttribute","foo","getElementById","appendChild","updateAllLoogies","YourCollectible","collectibleUpdate","startIndex","tokenIndex","tokenId","tokenByIndex","tokenURI","jsonManifestString","atob","substring","madLib","_madlibs","jsonManifest","JSON","parse","push","id","uri","e","toString","width","margin","paddingBottom","minHeight","marginTop","gutter","xs","sm","md","lg","xl","xxl","total","defaultPageSize","defaultCurrent","onChange","currentPage","showTotal","range","item","toNumber","fontSize","marginRight","image","description","owner","resize","proposals","split","txCur","addProposal","txClose","closeMadLib"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, List, Spin } from \"antd\";\nimport { Address } from \"../components\";\nimport { ethers } from \"ethers\";\nimport {Popup} from \"../components\";\nimport { Transactor, Web3ModalSetup } from \"../helpers\";\n\nfunction Loogies({ readContracts,writeContracts,tx, mainnetProvider, blockExplorer, totalSupply, DEBUG }) {\n  const [allLoogies, setAllLoogies] = useState();\n  const [page, setPage] = useState(1);\n  const [loadingLoogies, setLoadingLoogies] = useState(true);\n  const perPage = 8;\n  const [open, setOpen] = useState(false);\n  const [inputText, setInputText] = useState([]); // '' is the initial state value\n\n  const toggleProposal = () => {\n    setOpen(!open);\n  }\n\n  const handleFormChange = (event, index) => {\n    let data = [...inputText];\n    data[index][event.target.name] = event.target.value;\n    setInputText(data);\n  }\n\n\n  const addFields = () => {\n    let object = {\n      text: ''\n    }\n\n    setInputText([...inputText, object])\n  }\n  const add = (nBlanks) =>{\n    console.log(\"numero di text:\", nBlanks)\n    for (let i = 0; i<nBlanks; i++){\n        //Create an input type dynamically.\n        var element = document.createElement(\"textarea\");\n        \n        //Create Labels\n        var label = document.createElement(\"Label\");\n        label.innerHTML = \"New Label\";     \n        \n        //Assign different attributes to the element.\n        element.setAttribute(\"value\", \"\");\n        element.setAttribute(\"name\", \"Test Name\");\n        element.setAttribute(\"style\", \"width:200px\");\n        \n        label.setAttribute(\"style\", \"font-weight:normal\");\n        \n        // 'foobar' is the div id, where new fields are to be added\n        var foo = document.getElementById(\"proposals\");\n        \n        //Append the element in page (in span).\n        foo.appendChild(label);\n        foo.appendChild(element);\n        }\n    }\n\n  useEffect(() => {\n    const updateAllLoogies = async () => {\n      if (readContracts.YourCollectible && totalSupply) {\n        setLoadingLoogies(true);\n        const collectibleUpdate = [];\n        let startIndex = totalSupply - 1 - perPage * (page - 1);\n        for (let tokenIndex = startIndex; tokenIndex > startIndex - perPage && tokenIndex >= 0; tokenIndex--) {\n          try {\n            if (DEBUG) console.log(\"Getting token index\", tokenIndex);\n            const tokenId = await readContracts.YourCollectible.tokenByIndex(tokenIndex);\n            if (DEBUG) console.log(\"Getting Loogie tokenId: \", tokenId);\n            const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n            if (DEBUG) console.log(\"tokenURI: \", tokenURI);\n            const jsonManifestString = atob(tokenURI.substring(29));\n\n            const madLib = await readContracts.YourCollectible._madlibs(tokenId);\n            const nBlanks = madLib[2];\n\n            if (DEBUG) console.log(\"Getting nblanks: \", nBlanks);\n\n            try {\n              const jsonManifest = JSON.parse(jsonManifestString);\n              collectibleUpdate.push({ id: tokenId, uri: tokenURI,nBlanks: nBlanks, ...jsonManifest });\n            } catch (e) {\n              console.log(e);\n            }\n          } catch (e) {\n            console.log(e);\n          }\n        }\n        setAllLoogies(collectibleUpdate);\n        setLoadingLoogies(false);\n      }\n    };\n    updateAllLoogies();\n  }, [readContracts.YourCollectible, (totalSupply || \"0\").toString(), page]);\n\n  return (\n    <div style={{ width: \"auto\", margin: \"auto\", paddingBottom: 25, minHeight: 800 }}>\n      {false ? (\n        <Spin style={{ marginTop: 100 }} />\n      ) : (\n        <div>\n          <List\n            grid={{\n              gutter: 16,\n              xs: 1,\n              sm: 2,\n              md: 2,\n              lg: 3,\n              xl: 4,\n              xxl: 4,\n            }}\n            pagination={{\n              total: totalSupply,\n              defaultPageSize: perPage,\n              defaultCurrent: page,\n              onChange: currentPage => {\n                setPage(currentPage);\n              },\n              showTotal: (total, range) => `${range[0]}-${range[1]} of ${totalSupply} items`,\n            }}\n            loading={loadingLoogies}\n            dataSource={allLoogies}\n            renderItem={item => {\n              const id = item.id.toNumber();\n\n              return (\n                <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\n                  <Card\n                    title={\n                      <div>\n                        <span style={{ fontSize: 18, marginRight: 8 }}>{item.name}</span>\n                      </div>\n                    }\n                  >\n                    <img src={item.image} alt={\"Loogie #\" + id} width=\"200\" />\n                    <div>{item.description}</div>\n                    <div>\n                      <Address\n                        address={item.owner}\n                        ensProvider={mainnetProvider}\n                        blockExplorer={blockExplorer}\n                        fontSize={16}\n                      />\n                      <div>\n                        <Button type=\"primary\" onClick={toggleProposal}>\n                          INSERT PROPOSAL\n                        </Button>\n                        {open && <Popup\n                            content={<>\n                              <form id=\"proposals\">\n                                <h3>Insert your Proposals!</h3>\n                                <br />\n                                <h4>Use comma to separate words </h4>\n                                 <br />\n                                <label>\n                                  Text: <span></span>\n                                  <input type=\"text\" style={{resize: 'none'}} style=\"background-color:pink\" rows=\"4\" cols=\"50\" value={inputText} onInput={e => {\n                                    var proposals = (e.target.value).split(/(?:,| )+/);\n                                    setInputText(proposals)\n                                  }} />\n                                  <br />\n                                  \n                                </label>\n                                <br />\n\n                                <Button\n                                    type=\"primary\"\n                                    onClick={\n                                    async () => {\n                                    console.log(\"text: \", inputText);\n                                    console.log(\"nBlanks: \", item.nBlanks);\n                                    let txCur = await tx(writeContracts.YourCollectible.addProposal(inputText));\n                                  }}\n                              >Insert Proposal\n                              </Button>            <br />\n                              </form>\n                              <br />\n\n                            </>}\n                              handleClose={toggleProposal}\n                          />}\n                      </div>\n                      \n                      <div>\n                        <Button type=\"primary\" onClick={\n                            async () => {\n                              console.log(\"text: \", inputText);\n                              console.log(\"nBlanks: \", item.nBlanks);\n                              //if(!item.closed){\n                                let txClose = await tx(writeContracts.YourCollectible.closeMadLib(id));\n                              //}\n                                \n                            }\n                        }>CLOSE PROPOSAL\n                        </Button>\n                      </div>\n                    </div>\n                  </Card >\n                </List.Item>\n              );\n            }}\n          />\n        </div>\n        \n      )}\n    </div>\n  );\n}\n\nexport default Loogies;\n"]},"metadata":{},"sourceType":"module"}